name: Deploy to Production

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

env:
  FLASK_ENV: production 
  NODE_VERSION: 18.x

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.x'

    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'

    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Install frontend dependencies
      run: npm install

    - name: Build Tailwind CSS
      run: npm run build

    - name: Configure PostgreSQL
      run: |
        echo "DATABASE_URL=postgresql://${{ secrets.DB_USER }}:${{ secrets.DB_PASSWORD }}@${{ secrets.DB_HOST }}:5432/${{ secrets.DB_NAME }}" >> $GITHUB_ENV
        flask db upgrade
        
    - name: Deploy to Render
      uses: render-oss/deploy-to-render@v1
      with:
        service-id: ${{ secrets.RENDER_SERVICE_ID }}
        api-key: ${{ secrets.RENDER_API_KEY }}
        
    - name: Health check
      run: |
        curl -sSf ${{ secrets.PRODUCTION_URL }}/health > /dev/null || exit 1
        
    - name: Slack notification
      uses: slackapi/slack-github-action@v1
      with:
        slack-message: "Successfully deployed ${{ github.repository }} to production"
      env:
        SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
      if: success()

